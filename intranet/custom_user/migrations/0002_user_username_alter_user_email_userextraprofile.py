# Generated by Django 5.2.4 on 2025-07-17 07:39

import django.db.models.deletion
import django.utils.timezone
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('custom_media', '0001_initial'),
        ('custom_user', '0001_initial'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='username',
            field=models.CharField(error_messages={'unique': 'A user with that username already exists.'}, max_length=150, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(error_messages={'unique': 'A user with that email already exists.'}, max_length=254, unique=True, verbose_name='email address'),
        ),
        migrations.CreateModel(
            name='UserExtraProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about', models.TextField(blank=True, help_text='Tell us about yourself')),
                ('designation', models.CharField(blank=True, help_text='Your current role or position', max_length=255)),
                ('joining_date', models.DateField(default=django.utils.timezone.now, help_text='Select your joining date')),
                ('date_of_birth', models.DateField(blank=True, help_text='Select your date of birth', null=True)),
                ('employee_number', models.CharField(blank=True, help_text='Your employee number', max_length=20)),
                ('cover_photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='custom_media.customimage', verbose_name='Cover Photo')),
                ('expertise', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
